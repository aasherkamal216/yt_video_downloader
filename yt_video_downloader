import streamlit as st
from pytube import YouTube

def download_video(url, resolution):
    try:
        # Display message while fetching video details
        st.info("Fetching video details... Please wait.")

        # Get YouTube video
        yt = YouTube(url)

        # Display video details
        st.success(f"üé¨ Video Title: {yt.title}")
        st.image(yt.thumbnail_url, caption="Thumbnail", use_column_width=True)
        st.success(f"‚è±Ô∏è Video Duration: {yt.length} seconds")

        # Display message while downloading
        st.info("Downloading your video... Please wait.")

        # Filter and select the desired resolution
        stream = yt.streams.filter(res=resolution, file_extension="mp4").first()

        # Download the video
        stream.download()

        # Display success message
        st.success("‚úÖ Download successful! Check your downloads folder.")
    except Exception as e:
        # Display error message if an exception occurs
        st.error(f"‚ùå An error occurred: {e}")

def main():
    # Set app title
    st.title("YouTube Video DownloaderüöÄüåü")

    # User input for YouTube video URL
    url = st.text_input("Enter YouTube Video URL:")

    # Display the video details only if the URL is provided
    if url:
        # Fetch available resolutions dynamically
        yt = YouTube(url)
        available_resolutions = [str(stream.resolution) for stream in yt.streams.filter(file_extension="mp4")]

        # Resolution selection dropdown
        resolution = st.selectbox("Select Resolution:", available_resolutions)

        # Download button triggers the download_video function
        if st.button("Download"):
            download_video(url, resolution)

if __name__ == "__main__":
    # Run the app
    main()
